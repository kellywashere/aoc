    -1  #ip 3
     0  seti 123 0 1        r1 = 123
     1  bani 1 456 1        r1 &= 456
     2  eqri 1 72 1         r1 = (r1 == 72) ? 1 : 0
     3  addr 1 3 3          ip = 4 + r1
     4  seti 0 0 3          ip = 1
     5  seti 0 7 1          r1 = 0
     6  bori 1 65536 4      r4 = r1 | 65536
     7  seti 3798839 3 1    r1 = 3798839
     8  bani 4 255 5        r5 = r4 & 255
     9  addr 1 5 1          r1 += r5
    10  bani 1 16777215 1   r1 &= 16777215
    11  muli 1 65899 1      r1 *= 65899
    12  bani 1 16777215 1   r1 &= 16777215
    13  gtir 256 4 5        r5 = 256 > r4 ? 1 : 0
    14  addr 5 3 3          ip = 15 + r5
    15  addi 3 1 3          ip = 17
    16  seti 27 6 3         ip = 28
    17  seti 0 2 5          r5 = 0
    18  addi 5 1 2          r2 = r5 + 1
    19  muli 2 256 2        r2 *= 256
    20  gtrr 2 4 2          r2 = r2 > r4 ? 1 : 0
    21  addr 2 3 3          ip = 22 + r2
    22  addi 3 1 3          ip = 24
    23  seti 25 3 3         ip = 26
    24  addi 5 1 5          ++r5
    25  seti 17 1 3         ip = 18
    26  setr 5 6 4          r4 = r5
    27  seti 7 8 3          ip = 8
    28  eqrr 1 0 5          r5 = r0 == r1 ? 1 : 0
    29  addr 5 3 3          ip = 30 + r5
    30  seti 5 6 3          ip = 6


     0     r1 = 123

while (r1 & 456 != 72)
	;
//     	 1     r1 &= 456
//     	 2     r1 = (r1 == 72) ? 1 : 0
//     	 3     ip = 4 + r1
//     	 4     ip = 1

     5     r1 = 0
do {
     6     r4 = r1 | 0x10000
     7     r1 = 0x39F737

	while (1) {
     	 8     r5 = r4 & 0xFF
     	 9     r1 += r5
    	10     r1 &= 0xFFFFFF
    	11     r1 *= 65899
    	12     r1 &= 0xFFFFFF

    	if (r4 < 256)
			break;
    //	13     r5 = r4 < 256 ? 1 : 0
    //	14     ip = 15 + r5
    //	15     ip = 17
    //	16     ip = 28

    	17     r5 = 0

		while (1) {
			r2 = (r5 + 1) << 8;
			if (r2 > r4)
				break;
			++r5;
		}
	//    	18     r2 = r5 + 1
	//    	19     r2 *= 256
	//
	//    	20     r2 = r2 > r4 ? 1 : 0
	//    	21     ip = 22 + r2 // if r2 > r4 jmp to 26 else jmp to 24
	//    	22     ip = 24
	//    	23     ip = 26
	//
	//    	24     ++r5
	//    	25     ip = 18

			26     r4 = r5
	//    27     ip = 8
	}

} while (r0 != r1);
//    28     r5 = r0 == r1 ? 1 : 0
//    29     ip = 30 + r5 // EXIT if r0 == r1
//    30     ip = 6




// Equivalent C code (to be checked)
r1 = 123;
while (r1 & 456 != 72)
	;

r1 = 0;
do {
	r4 = r1 | 0x10000;
	r1 = 0x39F737;

	while (1) {
		r5 = r4 & 0xFF;
		r1 += r5;
		r1 &= 0xFFFFFF;
		r1 *= 65899;
		r1 &= 0xFFFFFF;

    	if (r4 < 256)
			break;

// next part: r4 >>= 8;
		r5 = 0;
		while (1) {
			r2 = (r5 + 1) << 8;
			if (r2 > r4)
				break;
			++r5;
		r4 = r5;
	}
} while (r0 != r1);





r1 = 0;
do {
	r4 = r1 | 0x10000;

	r1 = 0x39F737;
	while (1) {
		r1 += (r4 & 0xFF);
		r1 &= 0xFFFFFF;
		r1 *= 65899;
		r1 &= 0xFFFFFF;

    	if (r4 < 256)
			break;
		r4 >>= 8;
	}
} while (r0 != r1);



r1 = 0;
do {
	r4 = r1 | 0x10000;

	r1 = 0x39F737;
	do {
		r1 += (r4 & 0xFF);
		r1 &= 0xFFFFFF;
		r1 *= 65899;
		r1 &= 0xFFFFFF;

		r4 >>= 8;
	} while (r4 != 0);
} while (r0 != r1);


