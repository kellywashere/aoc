    -1	#ip 3
     0	addi 3 16 3		ip = 17   # that code sets r2 = 905, r5 = 69 if r0 = 0
     1	seti 1 5 1		r1 = 1
     2	seti 1 4 4		r4 = 1
     3	mulr 1 4 5		r5 = r1 * r4
     4	eqrr 5 2 5		r5 = (r5 == r2) ? 1 : 0
     5	addr 5 3 3		ip = 6 + r5
     6	addi 3 1 3		ip = 8
     7	addr 1 0 0		r0 += r1
     8	addi 4 1 4		++r4
     9	gtrr 4 2 5		r5 = (r4 > r2) ? 1 : 0
    10	addr 3 5 3		ip = 11 + r5
    11	seti 2 6 3		ip = 3
    12	addi 1 1 1		++r1
    13	gtrr 1 2 5		r5 = (r1 > r2) ? 1 : 0
    14	addr 5 3 3		ip = 15 + r5
    15	seti 1 1 3		ip = 2
    16	mulr 3 3 3		EXIT
    17	addi 2 2 2		r2 += 2
    18	mulr 2 2 2		r2 = r2^2
    19	mulr 3 2 2		r2 *= 19
    20	muli 2 11 2		r2 *= 11
    21	addi 5 3 5		r5 += 3
    22	mulr 5 3 5		r5 *= 22
    23	addi 5 3 5		r5 += 3
    24	addr 2 5 2		r2 += r5
    25	addr 3 0 3		ip = 26 + r0
    26	seti 0 6 3		ip = 1
    27	setr 3 8 5		r5 = 27
    28	mulr 5 3 5		r5 *= 28
    29	addr 3 5 5		r5 += 29
    30	mulr 3 5 5		r5 *= 30
    31	muli 5 14 5		r5 *= 14
    32	mulr 5 3 5		r5 *= 32
    33	addr 2 5 2		r2 += r5
    34	seti 0 2 0		r0 = 0
    35	seti 0 2 3		ip = 1

if (r0)
	r2 = 10551305
else
	r2 = 905;
(r5 = 69;)
     1	r1 = 1
do {
     	 2	r4 = 1

	do {
     	 	 3	r5 = r1 * r4

		if (r2 == r5) r0 += r1
		//     4	r5 = (r5 == r2) ? 1 : 0
		//     5	ip = 6 + r5 // jmp to 8 if r5 != r2, jmp to 7 if r5 == r2
		//     6	ip = 8
		//     7	r0 += r1

     	 	 8	++r4

		//     9	r5 = (r4 > r2) ? 1 : 0
		//    10	ip = 11 + r5 // jmp to 12 if r4 > r2, jmp to 3 if r4 <= r2
		//    11	ip = 3
	} while (r4 <= r2)

    12	++r1
} while (r1 <= r2)
//    13	r5 = (r1 > r2) ? 1 : 0
//    14	ip = 15 + r5 // EXIT if r1 > r2, else jmp to 2
//    15	ip = 2
//    16	EXIT



if (r0)
	r2 = 10551305
else
	r2 = 905;
r0 = 0;
for (r1 = 1; r1 <= r2; ++r1) {
	for (r4 = 1; r4 <= r2; ++r4) {
		if (r1 * r4 == r2)
			r0 += r1;
	}
}





if (r0)
	r2 = 10551305
else
	r2 = 905;
r0 = 0;
for (r1 = 1; r1 <= r2; ++r1) {
	if (r2 % r1 == 0)
		r0 += r1;
}

Program finds sum of divisors of r2
